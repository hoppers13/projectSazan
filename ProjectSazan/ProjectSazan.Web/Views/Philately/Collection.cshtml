@using Newtonsoft.Json
@using ProjectSazan.Domain
@using ProjectSazan.Domain.Philately
@using ProjectSazan.Web.Models.PhilatelyViewModels
@model IPhilatelicCollection

@functions{
	public object GetDisplayItems(IEnumerable<PhilatelicItem> items)
	{
		if (items == null) return new List<object>();

		var abbr = new CatalogueAbbreviations();
		var symbols = new CurrencySymbols();

		return items.Select(item => new
		{
			item.Id,
			TargetId = $"#{item.Id}",
			item.Year,
			item.CatalogueReference.Area,
			Catalogue = abbr[item.CatalogueReference.Catalogue],
			item.CatalogueReference.Number,
			item.Description,
			item.Scans,
			Acquired = item.Acquired.ToString("dd MMM yyyy"),
			Price = $"{symbols[item.Paid.Currency]}{item.Paid.Figure}"
		});
	}
}

@{
	ViewData["Title"] = Model.Title;
	var displayItems = GetDisplayItems(Model.Items);
	var items = JsonConvert.SerializeObject(displayItems);
}


<div id="dispaly-scans" class="modal fade" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div id="handlebars-placeholder" class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h5 class="modal-title">{{Year}},{{Area}} {{Description}} ({{Catalogue}} {{Number}})</h5>
			</div>
			<div class="modal-body">
				Carousel here
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>







<h2>@Model.Title</h2>
<div class="row">
	<div class="col-md-12"><a data-toggle="collapse" data-target="#philatelic-item-form" href="#">add item</a></div>
</div>
<div id="philatelic-item-form" class="collapse">
	@Html.Partial("_addPhilatelicItem", new PhilatelicItemViewModel())
</div>
<hr />
<table id="collection-items" class="table table-striped">
	<thead>
		<tr>
			<th class="col-md-6"></th>
			<th class="col-md-2">Acquired</th>
			<th class="col-md-2">Paid</th>
			<th class="col-md-2"></th>

		</tr>
	</thead>
	<tbody>
		<tr v-for="item in items">
			<td class="col-md-8">
				<div>{{item.Year}},{{item.Area}} {{item.Description}} ({{item.Catalogue}} {{item.Number}})</div>
				<div :id="item.Id" class="collapse">
					<template v-if="item.Scans.length > 0">
						<div v-for="scan in item.Scans" class="float-left scan-box">
							<a data-toggle="modal" data-target="#dispaly-scans" href="#">
								<figure>
									<img :src="scan.Image" :alt="scan.Caption" class="scan-image" />
									<figcaption>{{scan.Caption}}</figcaption>
								</figure>
							</a>
						</div>
					</template>
					<h5 class="info" v-else> There are no scans yet</h5>
				</div>
			</td>
			<td class="col-md-2">{{item.Acquired}}</td>
			<td class="col-md-2">{{item.Price}}</td>
			<td class="col-md-2"><a data-toggle="collapse" :data-target="item.TargetId" href="#">scans</a></td>
		</tr>
	</tbody>
</table>




@section Scripts{
	<script src="https://unpkg.com/vue"></script>
	<script>
		var collectionItems = @Html.Raw(items);

		function debugAlert(obj, caption) {
			alert(caption);
			alert(JSON.stringify(obj, null, 4));
		};

        $(function () {

		    var app = new Vue({
			    el: '#collection-items',
			    data: {
                        items: collectionItems
				      }
            });

			var modalCarousel = {
				"Year": 0,
				"Area": "",
				"Description": "",
				"Catalogue": "",
				"Number": ""
			}; 

            var appModal = new Vue({
                el: '#dispaly-scans',
                data: modalCarousel				
			})

			$('div.scan-box').click(function () {
				var selectedItemId = $(this).parent().attr('id');
				var selectedItem = $.grep(collectionItems, function (e) { return e.Id == selectedItemId})[0];
				appModalReplaceItem(selectedItem);				
			});

			function appModalReplaceItem(item) {
				modalCarousel.Year = item.Year;
				modalCarousel.Area = item.Area;
				modalCarousel.Description = item.Description;
				modalCarousel.Catalogue = item.Catalogue;
				modalCarousel.Number = item.Number;
			}
        });

	</script>
}
@using Newtonsoft.Json
@using ProjectSazan.Domain
@using ProjectSazan.Domain.Philately
@using ProjectSazan.Web.Models.PhilatelyViewModels
@model IPhilatelicCollection

@functions{
    public object GetDisplayItems(IEnumerable<PhilatelicItem> items)
    {
        if (items == null) return new List<object>();

        var abbr = new CatalogueAbbreviations();
        var symbols = new CurrencySymbols();

        return items.Select(item => new
        {
            item.Id,
            TargetId = $"#{item.Id}",
            item.Year,
            item.CatalogueReference.Area,
            SelectCatalogue = item.CatalogueReference.Catalogue.ToString(),
            Catalogue = abbr[item.CatalogueReference.Catalogue],
            item.CatalogueReference.Number,
            Conditions = item.Conditions.ToString(),
            item.Description,
            Scans = item.Scans.Select(scan => new { Image = scan.Image, Caption = scan.Caption }),
            Acquired = item.Acquired.ToString("dd MMM yyyy"),
            Currency = item.Paid.Currency.ToString(),
            Price = $"{symbols[item.Paid.Currency]}{item.Paid.Figure}"
        });
    }
}

@{
    ViewData["Title"] = Model.Title;
    var displayItems = GetDisplayItems(Model.Items);
    var items = JsonConvert.SerializeObject(displayItems);
}


<div id="dispaly-scans" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="handlebars-placeholder" class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h5 class="modal-title">{{Year}},{{Area}} {{Description}} ({{Catalogue}} {{Number}})</h5>
            </div>
            <div class="modal-body">
                @Html.Partial("_itemScansCarousel")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<h2>@Model.Title</h2>
<div class="row">
    <div class="col-md-12"><a data-toggle="collapse" data-target="#philatelic-item-form" href="#">add item</a></div>
</div>
<div id="philatelic-item-form" class="collapse">
    @Html.Partial("_addPhilatelicItem", new PhilatelicItemViewModel { CollectionId = Model.Id })
</div>
<hr />
<form asp-controller="philately" asp-action="quote" enctype="multipart/form-data" method="post">
    <input type="hidden" name="collectionId" value="@Model.Id" />
    <table id="collection-items" class="table table-striped">
        <thead>
            <tr>
                <th class="col-md-1"></th>
                <th class="col-md-6"></th>
                <th class="col-md-2">Acquired</th>
                <th class="col-md-1">Paid</th>
                <th class="col-md-2 text-center">
                    <button type="submit" class="btn btn-primary">Ask for a quote</button>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="item in items">
                <td class="col-md-1" :data-item-id="item.Id">
                    <a href="#" title="delete item" class="delete-item">
                        <span class="glyphicon glyphicon-remove"></span>
                    </a>
                    &nbsp;
                    <a href="#" title="update item" class="update-item" data-toggle="collapse" data-target="#philatelic-item-form">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </a>                    
                </td>
                <td class="col-md-6">
                    <div>
                        <a data-toggle="collapse" :data-target="item.TargetId" href="#">
                            {{item.Year}},{{item.Area}} {{item.Description}} ({{item.Catalogue}} {{item.Number}})
                        </a>
                    </div>
                    <div :id="item.Id" class="collapse">
                        <template v-if="item.Scans.length > 0">
                            <div v-for="scan in item.Scans" class="float-left scan-box">
                                <a data-toggle="modal" data-target="#dispaly-scans" href="#">
                                    <figure>
                                        <img :src="scan.Image" :alt="scan.Caption" class="scan-image" />
                                        <figcaption>{{scan.Caption}}</figcaption>
                                    </figure>
                                </a>
                            </div>
                        </template>
                        <h5 class="info" v-else> There are no scans yet</h5>
                    </div>
                </td>
                <td class="col-md-2">{{item.Acquired}}</td>
                <td class="col-md-1">{{item.Price}}</td>
                <td class="col-md-2 text-center"><input type="checkbox" name="items[]" class="quotebox" :value="item.Id" /></td>

            </tr>
        </tbody>
    </table>
</form>
@section Scripts{
    <script src="https://unpkg.com/vue"></script>

    <link href="//cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/build/css/bootstrap-datetimepicker.css" rel="stylesheet">
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment-with-locales.js"></script>
    <script src="//cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/src/js/bootstrap-datetimepicker.js"></script>

    <script>
		var collectionItems = @Html.Raw(items);

		function debugAlert(obj, caption) {
			alert(caption);
			alert(JSON.stringify(obj, null, 4));
		};

        $(function () {

			var app = new Vue({
				el: '#collection-items',
			    data: {
				        items: collectionItems
					  }
		        });

		    var modalCarousel = {
			    "Year": 0,
				    "Area": "",
				    "Description": "",
				    "Catalogue": "",
				    "Number": "",
				    "Scans": []
			    };

	        var appModal = new Vue({
                        el: '#dispaly-scans',
		        data: modalCarousel
			        })

			$('div.scan-box').click(function () {
	        	var selectedItemId = $(this).parent().attr('id');
	        	var selectedItem = $.grep(collectionItems, function (e) { return e.Id == selectedItemId})[0];
				appModalReplaceItem(selectedItem);
			});

            $('.update-item').click(function () {
                var selectedItemId = $(this).parent().attr('data-item-id');
                var selectedItem = $.grep(collectionItems, function (e) { return e.Id == selectedItemId })[0];

                $('#ItemId').val(selectedItem.Id);
                $('#Catalogue').val(selectedItem.SelectCatalogue);
                $('#Area').val(selectedItem.Area);
                $('#Number').val(selectedItem.Number);
                $('#Year').val(selectedItem.Year);
                $('#Description').val(selectedItem.Description);
                $('#Condition').val(selectedItem.Conditions);
                $('#Acquired').val(selectedItem.Acquired);
                $('#Price').val(selectedItem.Price);
                $('#Currency').val(selectedItem.Currency);
            });

            $('#AcquiredDatePicker').datetimepicker(
				{
		            locale: 'en-gb',
                    format: "DD/MM/YYYY"
				}
            );

			function appModalReplaceItem(item) {
		        modalCarousel.Year = item.Year;
		        modalCarousel.Area = item.Area;
		        modalCarousel.Description = item.Description;
		        modalCarousel.Catalogue = item.Catalogue;
		        modalCarousel.Number = item.Number;
		        modalCarousel.Scans = item.Scans;
	        }
        });

    </script>
}